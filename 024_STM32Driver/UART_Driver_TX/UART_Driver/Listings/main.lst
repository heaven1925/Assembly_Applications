


ARM Macro Assembler    Page 1 


    1 00000000         ;///////////////////////////////////////////////////////
                       /////
    2 00000000 40023800 
                       RCC_BASE
                               EQU              0x40023800
    3 00000000         
    4 00000000 00000030 
                       RCC_AHB1ENR_OFFSET
                               EQU              0x30
    5 00000000 40023830 
                       RCC_AHB1ENR
                               EQU              RCC_BASE + RCC_AHB1ENR_OFFSET
    6 00000000 00000001 
                       GPIOA_EN
                               EQU              1 << 0
    7 00000000         ;APB1ENR[17] = UART2
    8 00000000 00000040 
                       RCC_APB1ENR_OFFSET
                               EQU              0x40
    9 00000000 40023840 
                       RCC_APB1ENR
                               EQU              RCC_BASE + RCC_APB1ENR_OFFSET
   10 00000000 00020000 
                       UART2_EN
                               EQU              1 << 17
   11 00000000         
   12 00000000         ;///////////////////////////////////////////////////////
                       /////
   13 00000000 40020000 
                       GPIOA_BASE
                               EQU              0x40020000
   14 00000000         
   15 00000000 00000000 
                       GPIO_MODER_OFFSET
                               EQU              0x00
   16 00000000 40020000 
                       GPIOA_MODER
                               EQU              GPIOA_BASE + GPIO_MODER_OFFSET
   17 00000000 00000400 
                       GPIOA5_MODER
                               EQU              1 << 10
   18 00000000         
   19 00000000 00000014 
                       GPIO_ODR_OFFSET
                               EQU              0x14
   20 00000000 40020014 
                       GPIOA_ODR
                               EQU              GPIOA_BASE + GPIO_ODR_OFFSET
   21 00000000 00000020 
                       GPIOA5_ODR
                               EQU              1 << 5
   22 00000000         
   23 00000000 00000018 
                       GPIOA_BSRR_OFFSET
                               EQU              0x18
   24 00000000 40020018 
                       GPIOA_BSRR
                               EQU              GPIOA_BASE + GPIOA_BSRR_OFFSET
   25 00000000 00000020 



ARM Macro Assembler    Page 2 


                       GPIOA5_SET
                               EQU              1 << 5
   26 00000000 00200000 
                       GPIOA5_RESET
                               EQU              1 << 21
   27 00000000         
   28 00000000 00000020 
                       GPIOA_AFRL_OFFSET
                               EQU              0x20
   29 00000000 40020020 
                       GPIOA_AFRL
                               EQU              GPIOA_BASE + GPIOA_AFRL_OFFSET
   30 00000000         
   31 00000000 00000020 
                       GPIOA_AF_Select
                               EQU              0x20        ; = 0b 0010 0000 
   32 00000000 00000700 
                       AF7_Select
                               EQU              0x700       ; = 0b 0111 0000 00
                                                            00 Px2 
   33 00000000         
   34 00000000         ;///////////////////////////////////////////////////////
                       /////
   35 00000000 40004400 
                       UART2_BASE
                               EQU              0x40004400
   36 00000000         ;//////////////// Control register 1
   37 00000000 00000000 
                       UART2_CR1_OFFSET
                               EQU              0x00
   38 00000000 40004400 
                       UART2_CR1
                               EQU              UART2_BASE + UART2_CR1_OFFSET
   39 00000000         ;//////////////// Control register 2
   40 00000000 00000004 
                       UART2_CR2_OFFSET
                               EQU              0x04
   41 00000000 40004404 
                       UART2_CR2
                               EQU              UART2_BASE + UART2_CR2_OFFSET
   42 00000000         ;//////////////// Control register 3
   43 00000000 00000008 
                       UART2_CR3_OFFSET
                               EQU              0x08
   44 00000000 40004408 
                       UART2_CR3
                               EQU              UART2_BASE + UART2_CR3_OFFSET
   45 00000000         ;//////////////// Baud rate register
   46 00000000 0000000C 
                       UART2_BRR_OFFSET
                               EQU              0x0C
   47 00000000 4000440C 
                       UART2_BRR
                               EQU              UART2_BASE + UART2_BRR_OFFSET
   48 00000000         ;//////////////// Interrupt and status register
   49 00000000 0000001C 
                       UART2_ISR_OFFSET
                               EQU              0x1C
   50 00000000 4000441C 



ARM Macro Assembler    Page 3 


                       UART2_ISR
                               EQU              UART2_BASE + UART2_ISR_OFFSET
   51 00000000         ;//////////////// Receive data register
   52 00000000 00000024 
                       UART2_RDR_OFFSET
                               EQU              0x24
   53 00000000 40004424 
                       UART2_RDR
                               EQU              UART2_BASE + UART2_RDR_OFFSET
   54 00000000         ;//////////////// Transmit data register
   55 00000000 00000028 
                       UART2_TDR_OFFSET
                               EQU              0x28
   56 00000000 40004428 
                       UART2_TDR
                               EQU              UART2_BASE + UART2_TDR_OFFSET
   57 00000000         
   58 00000000 00000683 
                       BRR_Config
                               EQU              0x683       ;Baud Rate 16MHz
   59 00000000 00000008 
                       CR1_Config
                               EQU              0x8         ;Enable TX 8 bit da
                                                            ta
   60 00000000 00000000 
                       CR2_Config
                               EQU              0x0000      ; 1 stop bit
   61 00000000 00000000 
                       CR3_Config
                               EQU              0x0000      ; no flow control
   62 00000000         
   63 00000000 00000001 
                       UART2_CR1_EN
                               EQU              0x1         ; ue
   64 00000000         
   65 00000000 00000080 
                       TXE_Flag
                               EQU              0x80        ; ISR_TXE
   66 00000000         ;///////////////////////////////////////////////////////
                       ///// 
   67 00000000 0000000D 
                       CR      EQU              0x0D
   68 00000000 0000000A 
                       LF      EQU              0x0A
   69 00000000 00000008 
                       BS      EQU              0x08
   70 00000000 0000001B 
                       ESC     EQU              0x1B
   71 00000000 00000020 
                       SPA     EQU              0x20
   72 00000000 0000007F 
                       DEL     EQU              0X7F
   73 00000000         ;///////////////////////////////////////////////////////
                       /////
   74 00000000                 AREA             |.text|, CODE, READONLY
   75 00000000                 THUMB
   76 00000000                 ENTRY
   77 00000000                 EXPORT           __main
   78 00000000         __main



ARM Macro Assembler    Page 4 


   79 00000000 F000 F815       BL               UART_Init
   80 00000004         LOOP
   81 00000004 F04F 0059       MOV              R0, #0x59   ;'Y'
   82 00000008 F000 F83B       BL               UART_WriteChar
   83 0000000C F04F 0065       MOV              R0, #0x65   ;'E'
   84 00000010 F000 F837       BL               UART_WriteChar
   85 00000014 F04F 0073       MOV              R0, #0x73   ;'S'
   86 00000018 F000 F833       BL               UART_WriteChar
   87 0000001C F04F 000D       MOV              R0, #CR     ;'\n'
   88 00000020 F000 F82F       BL               UART_WriteChar
   89 00000024 F04F 000A       MOV              R0, #LF     ;'\n'
   90 00000028 F000 F82B       BL               UART_WriteChar
   91 0000002C E7EA            B                LOOP
   92 0000002E         
   93 0000002E         
   94 0000002E         
   95 0000002E         UART_Init                            ; RCC->AHB1ENR |= G
                                                            PIOA_EN
   96 0000002E 481A            LDR              R0, =RCC_AHB1ENR
   97 00000030 6801            LDR              R1, [R0]
   98 00000032 F041 0101       ORR              R1, #GPIOA_EN
   99 00000036 6001            STR              R1, [R0]
  100 00000038         ; RCC->APB1ENR |= UART2_EN
  101 00000038 4818            LDR              R0, =RCC_APB1ENR
  102 0000003A 6801            LDR              R1, [R0]
  103 0000003C F441 3100       ORR              R1, #UART2_EN
  104 00000040 6001            STR              R1, [R0]
  105 00000042         ; SET UP ALT F   ; GPIOA->AFRL |= AF7_Select
  106 00000042 4817            LDR              R0, =GPIOA_AFRL
  107 00000044 6801            LDR              R1, [R0]
  108 00000046 F441 61E0       ORR              R1, #AF7_Select
  109 0000004A 6001            STR              R1, [R0]
  110 0000004C         ;     ; GPIOA->MODER |= GPIOA_ALT_Select
  111 0000004C 4815            LDR              R0, =GPIOA_MODER
  112 0000004E 6801            LDR              R1,[R0]
  113 00000050 F041 0120       ORR              R1, #GPIOA_AF_Select ; 0x20
  114 00000054 6001            STR              R1, [R0]
  115 00000056         ; UART2->BRR = BRR_Config ; 9600
  116 00000056 4814            LDR              R0, =UART2_BRR
  117 00000058 F240 6183       MOVW             R1, #BRR_Config
  118 0000005C 6001            STR              R1, [R0]
  119 0000005E         ; UART2->CR1 = CR1_Config
  120 0000005E 4813            LDR              R0, =UART2_CR1
  121 00000060 F04F 0108       MOV              R1, #CR1_Config
  122 00000064 6001            STR              R1, [R0]
  123 00000066         ; UART2->CR2 = CR2_Config
  124 00000066 4812            LDR              R0, =UART2_CR2
  125 00000068 F04F 0100       MOV              R1, #CR2_Config
  126 0000006C 6001            STR              R1, [R0]
  127 0000006E         ; UART2->CR3 = CR3_Config
  128 0000006E 4811            LDR              R0, =UART2_CR3
  129 00000070 F04F 0100       MOV              R1, #CR3_Config
  130 00000074 6001            STR              R1, [R0]
  131 00000076         ; UART2->CR1 = TXE_EN
  132 00000076 480D            LDR              R0, =UART2_CR1
  133 00000078 6801            LDR              R1,[R0]
  134 0000007A F041 0101       ORR              R1, #UART2_CR1_EN ; UE
  135 0000007E 6001            STR              R1, [R0]
  136 00000080         



ARM Macro Assembler    Page 5 


  137 00000080 4770            BX               LR
  138 00000082         
  139 00000082         UART_WriteChar
  140 00000082 490D            LDR              R1, =UART2_ISR
  141 00000084         LOOP_1
  142 00000084 680A            LDR              R2, [R1]
  143 00000086 F002 0280       AND              R2, #TXE_Flag
  144 0000008A 2A00            CMP              R2, #0x00
  145 0000008C D0FA            BEQ              LOOP_1
  146 0000008E B2C1            UXTB             R1,R0
  147 00000090 4A0A            LDR              R2, =UART2_TDR
  148 00000092 6011            STR              R1, [R2]
  149 00000094 4770            BX               LR
  150 00000096         
  151 00000096 00 00           ALIGN
  152 00000098                 END
              40023830 
              40023840 
              40020020 
              40020000 
              4000440C 
              40004400 
              40004404 
              40004408 
              4000441C 
              40004428 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M7.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\K
eil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F
7xx_DFP\2.14.1\Drivers\CMSIS\Device\ST\STM32F7xx\Include --predefine="__MICROLI
B SETA 1" --predefine="__UVISION_VERSION SETA 524" --predefine="_RTE_ SETA 1" -
-predefine="STM32F746xx SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 74 in file main.s
   Uses
      None
Comment: .text unused
LOOP 00000004

Symbol: LOOP
   Definitions
      At line 80 in file main.s
   Uses
      At line 91 in file main.s
Comment: LOOP used once
LOOP_1 00000084

Symbol: LOOP_1
   Definitions
      At line 141 in file main.s
   Uses
      At line 145 in file main.s
Comment: LOOP_1 used once
UART_Init 0000002E

Symbol: UART_Init
   Definitions
      At line 95 in file main.s
   Uses
      At line 79 in file main.s
Comment: UART_Init used once
UART_WriteChar 00000082

Symbol: UART_WriteChar
   Definitions
      At line 139 in file main.s
   Uses
      At line 82 in file main.s
      At line 84 in file main.s
      At line 86 in file main.s
      At line 88 in file main.s
      At line 90 in file main.s

__main 00000000

Symbol: __main
   Definitions
      At line 78 in file main.s
   Uses
      At line 77 in file main.s
Comment: __main used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

AF7_Select 00000700

Symbol: AF7_Select
   Definitions
      At line 32 in file main.s
   Uses
      At line 108 in file main.s
Comment: AF7_Select used once
BRR_Config 00000683

Symbol: BRR_Config
   Definitions
      At line 58 in file main.s
   Uses
      At line 117 in file main.s
Comment: BRR_Config used once
BS 00000008

Symbol: BS
   Definitions
      At line 69 in file main.s
   Uses
      None
Comment: BS unused
CR 0000000D

Symbol: CR
   Definitions
      At line 67 in file main.s
   Uses
      At line 87 in file main.s
Comment: CR used once
CR1_Config 00000008

Symbol: CR1_Config
   Definitions
      At line 59 in file main.s
   Uses
      At line 121 in file main.s
Comment: CR1_Config used once
CR2_Config 00000000

Symbol: CR2_Config
   Definitions
      At line 60 in file main.s
   Uses
      At line 125 in file main.s
Comment: CR2_Config used once
CR3_Config 00000000

Symbol: CR3_Config
   Definitions
      At line 61 in file main.s
   Uses
      At line 129 in file main.s
Comment: CR3_Config used once
DEL 0000007F

Symbol: DEL



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 72 in file main.s
   Uses
      None
Comment: DEL unused
ESC 0000001B

Symbol: ESC
   Definitions
      At line 70 in file main.s
   Uses
      None
Comment: ESC unused
GPIOA5_MODER 00000400

Symbol: GPIOA5_MODER
   Definitions
      At line 17 in file main.s
   Uses
      None
Comment: GPIOA5_MODER unused
GPIOA5_ODR 00000020

Symbol: GPIOA5_ODR
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: GPIOA5_ODR unused
GPIOA5_RESET 00200000

Symbol: GPIOA5_RESET
   Definitions
      At line 26 in file main.s
   Uses
      None
Comment: GPIOA5_RESET unused
GPIOA5_SET 00000020

Symbol: GPIOA5_SET
   Definitions
      At line 25 in file main.s
   Uses
      None
Comment: GPIOA5_SET unused
GPIOA_AFRL 40020020

Symbol: GPIOA_AFRL
   Definitions
      At line 29 in file main.s
   Uses
      At line 106 in file main.s
Comment: GPIOA_AFRL used once
GPIOA_AFRL_OFFSET 00000020

Symbol: GPIOA_AFRL_OFFSET
   Definitions
      At line 28 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 29 in file main.s
Comment: GPIOA_AFRL_OFFSET used once
GPIOA_AF_Select 00000020

Symbol: GPIOA_AF_Select
   Definitions
      At line 31 in file main.s
   Uses
      At line 113 in file main.s
Comment: GPIOA_AF_Select used once
GPIOA_BASE 40020000

Symbol: GPIOA_BASE
   Definitions
      At line 13 in file main.s
   Uses
      At line 16 in file main.s
      At line 20 in file main.s
      At line 24 in file main.s
      At line 29 in file main.s

GPIOA_BSRR 40020018

Symbol: GPIOA_BSRR
   Definitions
      At line 24 in file main.s
   Uses
      None
Comment: GPIOA_BSRR unused
GPIOA_BSRR_OFFSET 00000018

Symbol: GPIOA_BSRR_OFFSET
   Definitions
      At line 23 in file main.s
   Uses
      At line 24 in file main.s
Comment: GPIOA_BSRR_OFFSET used once
GPIOA_EN 00000001

Symbol: GPIOA_EN
   Definitions
      At line 6 in file main.s
   Uses
      At line 98 in file main.s
Comment: GPIOA_EN used once
GPIOA_MODER 40020000

Symbol: GPIOA_MODER
   Definitions
      At line 16 in file main.s
   Uses
      At line 111 in file main.s
Comment: GPIOA_MODER used once
GPIOA_ODR 40020014

Symbol: GPIOA_ODR
   Definitions
      At line 20 in file main.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      None
Comment: GPIOA_ODR unused
GPIO_MODER_OFFSET 00000000

Symbol: GPIO_MODER_OFFSET
   Definitions
      At line 15 in file main.s
   Uses
      At line 16 in file main.s
Comment: GPIO_MODER_OFFSET used once
GPIO_ODR_OFFSET 00000014

Symbol: GPIO_ODR_OFFSET
   Definitions
      At line 19 in file main.s
   Uses
      At line 20 in file main.s
Comment: GPIO_ODR_OFFSET used once
LF 0000000A

Symbol: LF
   Definitions
      At line 68 in file main.s
   Uses
      At line 89 in file main.s
Comment: LF used once
RCC_AHB1ENR 40023830

Symbol: RCC_AHB1ENR
   Definitions
      At line 5 in file main.s
   Uses
      At line 96 in file main.s
Comment: RCC_AHB1ENR used once
RCC_AHB1ENR_OFFSET 00000030

Symbol: RCC_AHB1ENR_OFFSET
   Definitions
      At line 4 in file main.s
   Uses
      At line 5 in file main.s
Comment: RCC_AHB1ENR_OFFSET used once
RCC_APB1ENR 40023840

Symbol: RCC_APB1ENR
   Definitions
      At line 9 in file main.s
   Uses
      At line 101 in file main.s
Comment: RCC_APB1ENR used once
RCC_APB1ENR_OFFSET 00000040

Symbol: RCC_APB1ENR_OFFSET
   Definitions
      At line 8 in file main.s
   Uses
      At line 9 in file main.s
Comment: RCC_APB1ENR_OFFSET used once
RCC_BASE 40023800



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols


Symbol: RCC_BASE
   Definitions
      At line 2 in file main.s
   Uses
      At line 5 in file main.s
      At line 9 in file main.s

SPA 00000020

Symbol: SPA
   Definitions
      At line 71 in file main.s
   Uses
      None
Comment: SPA unused
TXE_Flag 00000080

Symbol: TXE_Flag
   Definitions
      At line 65 in file main.s
   Uses
      At line 143 in file main.s
Comment: TXE_Flag used once
UART2_BASE 40004400

Symbol: UART2_BASE
   Definitions
      At line 35 in file main.s
   Uses
      At line 38 in file main.s
      At line 41 in file main.s
      At line 44 in file main.s
      At line 47 in file main.s
      At line 50 in file main.s
      At line 53 in file main.s
      At line 56 in file main.s

UART2_BRR 4000440C

Symbol: UART2_BRR
   Definitions
      At line 47 in file main.s
   Uses
      At line 116 in file main.s
Comment: UART2_BRR used once
UART2_BRR_OFFSET 0000000C

Symbol: UART2_BRR_OFFSET
   Definitions
      At line 46 in file main.s
   Uses
      At line 47 in file main.s
Comment: UART2_BRR_OFFSET used once
UART2_CR1 40004400

Symbol: UART2_CR1
   Definitions
      At line 38 in file main.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 120 in file main.s
      At line 132 in file main.s

UART2_CR1_EN 00000001

Symbol: UART2_CR1_EN
   Definitions
      At line 63 in file main.s
   Uses
      At line 134 in file main.s
Comment: UART2_CR1_EN used once
UART2_CR1_OFFSET 00000000

Symbol: UART2_CR1_OFFSET
   Definitions
      At line 37 in file main.s
   Uses
      At line 38 in file main.s
Comment: UART2_CR1_OFFSET used once
UART2_CR2 40004404

Symbol: UART2_CR2
   Definitions
      At line 41 in file main.s
   Uses
      At line 124 in file main.s
Comment: UART2_CR2 used once
UART2_CR2_OFFSET 00000004

Symbol: UART2_CR2_OFFSET
   Definitions
      At line 40 in file main.s
   Uses
      At line 41 in file main.s
Comment: UART2_CR2_OFFSET used once
UART2_CR3 40004408

Symbol: UART2_CR3
   Definitions
      At line 44 in file main.s
   Uses
      At line 128 in file main.s
Comment: UART2_CR3 used once
UART2_CR3_OFFSET 00000008

Symbol: UART2_CR3_OFFSET
   Definitions
      At line 43 in file main.s
   Uses
      At line 44 in file main.s
Comment: UART2_CR3_OFFSET used once
UART2_EN 00020000

Symbol: UART2_EN
   Definitions
      At line 10 in file main.s
   Uses
      At line 103 in file main.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

Comment: UART2_EN used once
UART2_ISR 4000441C

Symbol: UART2_ISR
   Definitions
      At line 50 in file main.s
   Uses
      At line 140 in file main.s
Comment: UART2_ISR used once
UART2_ISR_OFFSET 0000001C

Symbol: UART2_ISR_OFFSET
   Definitions
      At line 49 in file main.s
   Uses
      At line 50 in file main.s
Comment: UART2_ISR_OFFSET used once
UART2_RDR 40004424

Symbol: UART2_RDR
   Definitions
      At line 53 in file main.s
   Uses
      None
Comment: UART2_RDR unused
UART2_RDR_OFFSET 00000024

Symbol: UART2_RDR_OFFSET
   Definitions
      At line 52 in file main.s
   Uses
      At line 53 in file main.s
Comment: UART2_RDR_OFFSET used once
UART2_TDR 40004428

Symbol: UART2_TDR
   Definitions
      At line 56 in file main.s
   Uses
      At line 147 in file main.s
Comment: UART2_TDR used once
UART2_TDR_OFFSET 00000028

Symbol: UART2_TDR_OFFSET
   Definitions
      At line 55 in file main.s
   Uses
      At line 56 in file main.s
Comment: UART2_TDR_OFFSET used once
49 symbols
392 symbols in table
